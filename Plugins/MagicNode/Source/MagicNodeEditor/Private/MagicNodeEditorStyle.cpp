//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////
///			Copyright 2019 (C) Bruno Xavier B. Leite
//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "MagicNodeEditorStyle.h"
#include "MagicNodeEditor_Shared.h"

#include "Styling/SlateStyle.h"
#include "Interfaces/IPluginManager.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define PLUGIN_BRUSH(RelativePath,...) FSlateImageBrush(FMagicNodeEditorStyle::InContent(RelativePath,TEXT(".png")),__VA_ARGS__)

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TSharedPtr<FSlateStyleSet>FMagicNodeEditorStyle::StyleSet = nullptr;
TSharedPtr<ISlateStyle>FMagicNodeEditorStyle::Get() {return StyleSet;}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

FString FMagicNodeEditorStyle::InContent(const FString &RelativePath, const TCHAR* Extension) {
	static FString Content = IPluginManager::Get().FindPlugin(TEXT("MagicNode"))->GetContentDir();
	return (Content/RelativePath)+Extension;
}

FName FMagicNodeEditorStyle::GetStyleSetName() {
	static FName StyleName(TEXT("MagicNodeEditorStyle"));
	return StyleName;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

void FMagicNodeEditorStyle::Initialize() {
	if (StyleSet.IsValid()) {return;}
	//
	const FVector2D Icon16x16(16.f,16.f);
	const FVector2D Icon40x40(40.f,40.f);
	const FVector2D Icon128x128(128.f,128.f);
	//
	StyleSet = MakeShareable(new FSlateStyleSet(GetStyleSetName()));
	StyleSet->SetContentRoot(IPluginManager::Get().FindPlugin(TEXT("MagicNode"))->GetContentDir());
	//
	StyleSet->Set("ClassIcon.MagicNodeScript", new PLUGIN_BRUSH(TEXT("Icons/MagicNode_16x"),Icon16x16));
	StyleSet->Set("ClassThumbnail.MagicNodeScript", new PLUGIN_BRUSH(TEXT("Icons/MagicNode_128x"),Icon128x128));
	//
	StyleSet->Set("ClassIcon.MagicNode", new PLUGIN_BRUSH(TEXT("Icons/MagicNode_16x"),Icon16x16));
	StyleSet->Set("ClassThumbnail.MagicNode", new PLUGIN_BRUSH(TEXT("Icons/MagicNode_128x"),Icon128x128));
	//
	StyleSet->Set("Toolbar.MagicNodeScript", new PLUGIN_BRUSH(TEXT("Icons/MagicNode_128x"),Icon40x40));
	//
	FSlateStyleRegistry::RegisterSlateStyle(*StyleSet.Get());
};

void FMagicNodeEditorStyle::Shutdown() {
	if (StyleSet.IsValid()) {
		FSlateStyleRegistry::UnRegisterSlateStyle(*StyleSet.Get());
		ensure(StyleSet.IsUnique()); StyleSet.Reset();
	}///
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#undef PLUGIN_BRUSH

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////