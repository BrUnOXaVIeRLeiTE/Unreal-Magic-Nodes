//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////
///			Copyright 2020 (C) Bruno Xavier B. Leite
//////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include "MagicNodeEditor.h"
#include "MagicNodeEditor_Shared.h"

#include "MGC_Toolkit.h"

#include "Kismet2/KismetEditorUtilities.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define LOCTEXT_NAMESPACE "Synaptech"

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

UMGC_ScriptFactory::UMGC_ScriptFactory(const class FObjectInitializer &OBJ) : Super(OBJ) {
	SupportedClass = UMagicNodeScript::StaticClass();
	bEditAfterNew = true;
	bCreateNew = true;
}

UObject* UMGC_ScriptFactory::FactoryCreateNew(UClass* Class, UObject* InParent, FName Name, EObjectFlags Flags, UObject* Context, FFeedbackContext* Warn) {
	check(Class->IsChildOf(UMagicNodeScript::StaticClass()));
	//
	return NewObject<UMagicNodeScript>(InParent,Class,Name,Flags,Context);
}

FText FATA_MagicNode::GetAssetDescription(const FAssetData &AssetData) const {
	return FText::FromString(FString(TEXT("'Magic Nodes' programming system.")));
}

void FATA_MagicNode::OpenAssetEditor(const TArray<UObject*>&InObjects, TSharedPtr<IToolkitHost>EditWithinLevelEditor) {
	EToolkitMode::Type Mode = EditWithinLevelEditor.IsValid() ? EToolkitMode::WorldCentric : EToolkitMode::Standalone;
	//
	for (auto IT = InObjects.CreateConstIterator(); IT; ++IT) {
		if (UMagicNodeScript* ScriptObject = Cast<UMagicNodeScript>(*IT)) {
			TSharedRef<FMGC_Toolkit>MGC_CodeEditor(new FMGC_Toolkit());
			MGC_CodeEditor->INIT(Mode,EditWithinLevelEditor,ScriptObject);
		}///
	}///
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#undef LOCTEXT_NAMESPACE

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////